import{a1 as p}from"./index-9oiziVwF.js";async function d(a,{directory:i="activities",entityType:e="carbon_record",entityId:r=null,sha256:l,expiresIn:o=600}={}){var s,u;const t={original_name:a.name,directory:i,mime_type:a.type||"application/octet-stream",file_size:a.size,entity_type:e,entity_id:r,sha256:l,expires_in:o},n=await p.post("/files/presign",t);if(!((s=n.data)!=null&&s.success))throw new Error(((u=n.data)==null?void 0:u.message)||"Presign failed");return n.data.data}async function f(a,i){const e=new Headers(i.headers||{});if(!e.has("Content-Type")&&a.type&&e.set("Content-Type",a.type),!(await fetch(i.url,{method:"PUT",body:a,headers:e})).ok)throw new Error("PUT upload failed");return!0}async function c(a){var e,r;const i=await p.post("/files/confirm",a);if(!((e=i.data)!=null&&e.success))throw new Error(((r=i.data)==null?void 0:r.message)||"Confirm failed");return i.data.data}async function _(a,i={}){const e=await d(a,i),r=(t={})=>{const n={url:e.public_url||null,file_path:e.file_path,thumbnail_path:e.thumbnail_path||null,presigned_url:e.presigned_url||null,original_name:a.name,mime_type:a.type,size:a.size,...t};return n.duplicate=!!(t.duplicate??n.duplicate??!1),t.file_path&&(n.file_path=t.file_path),t.thumbnail_path&&(n.thumbnail_path=t.thumbnail_path),t.url&&(n.url=t.url),t.presigned_url&&(n.presigned_url=t.presigned_url),n},l={file_path:e.file_path,original_name:a.name,entity_type:i.entityType||"carbon_record",entity_id:i.entityId||null};if(e.duplicate){let t=null;if(e.confirm_required)try{t=await c(l)}catch(n){console.warn("Confirm upload failed for duplicate",n)}return r({duplicate:!0,...t||{}})}await f(a,e);let o=null;if(e.confirm_required!==!1)try{o=await c(l)}catch(t){console.warn("Confirm upload failed",t)}return r({duplicate:!1,...o||{}})}async function h(a,i={},e){const r=[];let l=0;for(const o of a){const t=await _(o,i);r.push(t),l++,e&&e(l,a.length,t)}return r}export{h as b,_ as u};
